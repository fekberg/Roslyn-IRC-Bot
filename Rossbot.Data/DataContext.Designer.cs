//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Rossbot.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataContext object using the connection string found in the 'DataContext' section of the application configuration file.
        /// </summary>
        public DataContext() : base("name=DataContext", "DataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataContext object.
        /// </summary>
        public DataContext(string connectionString) : base(connectionString, "DataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataContext object.
        /// </summary>
        public DataContext(EntityConnection connection) : base(connection, "DataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Commands> Commands
        {
            get
            {
                if ((_Commands == null))
                {
                    _Commands = base.CreateObjectSet<Commands>("Commands");
                }
                return _Commands;
            }
        }
        private ObjectSet<Commands> _Commands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Namespaces> Namespaces
        {
            get
            {
                if ((_Namespaces == null))
                {
                    _Namespaces = base.CreateObjectSet<Namespaces>("Namespaces");
                }
                return _Namespaces;
            }
        }
        private ObjectSet<Namespaces> _Namespaces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Commands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommands(Commands commands)
        {
            base.AddObject("Commands", commands);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Namespaces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNamespaces(Namespaces namespaces)
        {
            base.AddObject("Namespaces", namespaces);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoslynIrcBotModel", Name="Commands")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Commands : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Commands object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="command">Initial value of the Command property.</param>
        /// <param name="posted">Initial value of the Posted property.</param>
        public static Commands CreateCommands(global::System.Guid id, global::System.String username, global::System.String command, global::System.DateTime posted)
        {
            Commands commands = new Commands();
            commands.Id = id;
            commands.Username = username;
            commands.Command = command;
            commands.Posted = posted;
            return commands;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Command
        {
            get
            {
                return _Command;
            }
            set
            {
                OnCommandChanging(value);
                ReportPropertyChanging("Command");
                _Command = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Command");
                OnCommandChanged();
            }
        }
        private global::System.String _Command;
        partial void OnCommandChanging(global::System.String value);
        partial void OnCommandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Posted
        {
            get
            {
                return _Posted;
            }
            set
            {
                OnPostedChanging(value);
                ReportPropertyChanging("Posted");
                _Posted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Posted");
                OnPostedChanged();
            }
        }
        private global::System.DateTime _Posted;
        partial void OnPostedChanging(global::System.DateTime value);
        partial void OnPostedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoslynIrcBotModel", Name="Namespaces")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Namespaces : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Namespaces object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="namespace">Initial value of the Namespace property.</param>
        public static Namespaces CreateNamespaces(global::System.Guid id, global::System.String @namespace)
        {
            Namespaces namespaces = new Namespaces();
            namespaces.Id = id;
            namespaces.Namespace = @namespace;
            return namespaces;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Namespace
        {
            get
            {
                return _Namespace;
            }
            set
            {
                OnNamespaceChanging(value);
                ReportPropertyChanging("Namespace");
                _Namespace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Namespace");
                OnNamespaceChanged();
            }
        }
        private global::System.String _Namespace;
        partial void OnNamespaceChanging(global::System.String value);
        partial void OnNamespaceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoslynIrcBotModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Users CreateUsers(global::System.Guid id)
        {
            Users users = new Users();
            users.Id = id;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ident
        {
            get
            {
                return _Ident;
            }
            set
            {
                OnIdentChanging(value);
                ReportPropertyChanging("Ident");
                _Ident = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ident");
                OnIdentChanged();
            }
        }
        private global::System.String _Ident;
        partial void OnIdentChanging(global::System.String value);
        partial void OnIdentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserLevel
        {
            get
            {
                return _UserLevel;
            }
            set
            {
                OnUserLevelChanging(value);
                ReportPropertyChanging("UserLevel");
                _UserLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserLevel");
                OnUserLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _UserLevel;
        partial void OnUserLevelChanging(Nullable<global::System.Int32> value);
        partial void OnUserLevelChanged();

        #endregion
    
    }

    #endregion
    
}
